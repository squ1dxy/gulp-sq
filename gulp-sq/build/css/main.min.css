*{-webkit-box-sizing:border-box;box-sizing:border-box}body{font:22px/1.5 Arial;background:url(../img/ff2.png) no-repeat/cover}.news{list-style:none;padding:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.title{text-transform:uppercase}@supports (-webkit-appearance:none){body{background:url(../img/ff2.webp) no-repeat/cover}}@media (max-width:700px){body{color:#fff;background-color:#000}.news{display:block}.title{text-align:center}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uc2NzcyIsIm1haW4ubWluLmNzcyIsIm1haW4uY3NzIiwiYmxvY2svbmV3cy5zY3NzIiwiYmxvY2svdGl0bGUuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFRQSxDLENBQ0ksNkIsQ0NQRixxQixDRFVGLEksQ0FDSSxtQixDQUNBLDhDLENFTEosSyxDRk5JLGUsQ0FTSixTLENDQ0UsbUIsQ0FDQSxtQixDQ0FBLFksQ0FDRix3QixDREVFLHFCLENFakJGLDZCLENGcUJBLE0sQ0VsQkksd0IsQ0ZzQkosV0VyQkksdUIsRUZzQkYsSSxDQ0pGLGlELEFEU0EseUJDSkEsSSxDRE1JLFUsQ0dqQ0oscUIsQ0pHSSxLLENJSEosYSxDRm9DQSxNLENBQ0EsbUIiLCJmaWxlIjoibWFpbi5taW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiJGJhc2UtZm9udC1zaXplOjIycHg7XHJcblxyXG5AbWl4aW4gcGh7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDo3MDBweCl7XHJcbiAgICAgICAgQGNvbnRlbnRcclxuICAgIH1cclxufVxyXG5cclxuKiB7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG5ib2R5e1xyXG4gICAgZm9udC1zaXplOiAkYmFzZS1mb250LXNpemU7XHJcbiAgICBmb250LWZhbWlseTogQXJpYWw7XHJcbiAgICBsaW5lLWhlaWdodDogMS41O1xyXG4gICAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1nL2ZmMi5wbmdcIikgbm8tcmVwZWF0IC8gY292ZXI7XHJcblxyXG4gICAgQGluY2x1ZGUgcGgge1xyXG4gICAgICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDsgICAgICAgXHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5cclxuQGltcG9ydCBcImJsb2NrL25ld3Muc2Nzc1wiO1xuQGltcG9ydCBcImJsb2NrL3RpdGxlLnNjc3NcIjtcclxuIiwiKiB7XG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuYm9keSB7XG4gIGZvbnQ6IDIycHgvMS41IEFyaWFsO1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWcvZmYyLnBuZ1wiKSBuby1yZXBlYXQvY292ZXI7XG59XG5cbi5uZXdzIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi50aXRsZSB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpIHtcbiAgYm9keSB7XG4gICAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1nL2ZmMi53ZWJwXCIpIG5vLXJlcGVhdC9jb3ZlcjtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzAwcHgpIHtcbiAgYm9keSB7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcbiAgfVxuXG4gIC5uZXdzIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gIC50aXRsZSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpIHtcblxufVxufVxyXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbTFoYVc0dWMyTnpjeUlzSW0xaGFXNHVZM056SWl3aVlteHZZMnN2Ym1WM2N5NXpZM056SWl3aVlteHZZMnN2ZEdsMGJHVXVjMk56Y3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGUlFUdEZRVU5KTERoQ1FVRkJPMVZCUVVFc2MwSkJRVUU3UVVOUVNqczdRVVJWUVR0RlFVTkpMR1ZCWWxrN1JVRmpXaXhyUWtGQlFUdEZRVU5CTEdkQ1FVRkJPMFZCUTBFc2FVUkJRVUU3UVVOUVNqdEJSRTVKTzBWQlUwbzdTVUZQV1N4WFFVRkJPMGxCUTBFc2MwSkJRVUU3UlVOT1ZqdEJRVU5HT3p0QlEyWkJPMFZCUTBrc1owSkJRVUU3UlVGRFFTeFZRVUZCTzBWQlEwRXNiMEpCUVVFN1JVRkJRU3h2UWtGQlFUdEZRVUZCTEdGQlFVRTdSVUZEUVN4NVFrRkJRVHROUVVGQkxITkNRVUZCTzFWQlFVRXNPRUpCUVVFN1FVUnJRa283UVVSdVFrazdSVVZJU2p0SlFVOVpMR05CUVVFN1JVUnRRbFk3UVVGRFJqczdRVVV6UWtFN1JVRkRTU3g1UWtGQlFUdEJSamhDU2p0QlJEVkNTVHRGUjBoS08wbEJTVk1zYTBKQlFVRTdSVVlyUWxBN1FVRkRSanRCUVVOQk8wRkJRMEVzUzBGQlN5eHBSRUZCYVVRN1FVRkRkRVE3TzBOQlJVTTdPMEZCUlVRN08wRkJSVUU3TzBGQlJVRWlMQ0ptYVd4bElqb2liV0ZwYmk1amMzTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUlrWW1GelpTMW1iMjUwTFhOcGVtVTZNakp3ZUR0Y2NseHVYSEpjYmtCdGFYaHBiaUJ3YUh0Y2NseHVJQ0FnSUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2pjd01IQjRLWHRjY2x4dUlDQWdJQ0FnSUNCQVkyOXVkR1Z1ZEZ4eVhHNGdJQ0FnZlZ4eVhHNTlYSEpjYmx4eVhHNHFJSHRjY2x4dUlDQWdJR0p2ZUMxemFYcHBibWM2SUdKdmNtUmxjaTFpYjNnN1hISmNibjFjY2x4dVhISmNibUp2WkhsN1hISmNiaUFnSUNCbWIyNTBMWE5wZW1VNklDUmlZWE5sTFdadmJuUXRjMmw2WlR0Y2NseHVJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQkJjbWxoYkR0Y2NseHVJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXhMalU3WEhKY2JpQWdJQ0JpWVdOclozSnZkVzVrT2lCMWNtd29YQ0l1TGk5cGJXY3ZabVl5TG5CdVoxd2lLU0J1YnkxeVpYQmxZWFFnTHlCamIzWmxjanRjY2x4dVhISmNiaUFnSUNCQWFXNWpiSFZrWlNCd2FDQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lBalptWm1PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpNREF3T3lBZ0lDQWdJQ0JjY2x4dUlDQWdJSDFjY2x4dWZWeHlYRzVjY2x4dVhISmNibHh5WEc1QWFXMXdiM0owSUZ3aVlteHZZMnN2Ym1WM2N5NXpZM056WENJN1hHNUFhVzF3YjNKMElGd2lZbXh2WTJzdmRHbDBiR1V1YzJOemMxd2lPMXh5WEc0aUxDSXFJSHRjYmlBZ1ltOTRMWE5wZW1sdVp6b2dZbTl5WkdWeUxXSnZlRHRjYm4xY2JseHVZbTlrZVNCN1hHNGdJR1p2Ym5RdGMybDZaVG9nTWpKd2VEdGNiaUFnWm05dWRDMW1ZVzFwYkhrNklFRnlhV0ZzTzF4dUlDQnNhVzVsTFdobGFXZG9kRG9nTVM0MU8xeHVJQ0JpWVdOclozSnZkVzVrT2lCMWNtd29YQ0l1TGk5cGJXY3ZabVl5TG5CdVoxd2lLU0J1YnkxeVpYQmxZWFF2WTI5MlpYSTdYRzU5WEc1QWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ056QXdjSGdwSUh0Y2JpQWdZbTlrZVNCN1hHNGdJQ0FnWTI5c2IzSTZJQ05tWm1ZN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSXpBd01EdGNiaUFnZlZ4dWZWeHVYRzR1Ym1WM2N5QjdYRzRnSUd4cGMzUXRjM1I1YkdVNklHNXZibVU3WEc0Z0lIQmhaR1JwYm1jNklEQTdYRzRnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUdwMWMzUnBabmt0WTI5dWRHVnVkRG9nYzNCaFkyVXRZbVYwZDJWbGJqdGNibjFjYmtCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBM01EQndlQ2tnZTF4dUlDQXVibVYzY3lCN1hHNGdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUgxY2JuMWNibHh1TG5ScGRHeGxJSHRjYmlBZ2RHVjRkQzEwY21GdWMyWnZjbTA2SUhWd2NHVnlZMkZ6WlR0Y2JuMWNia0J0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUEzTURCd2VDa2dlMXh1SUNBdWRHbDBiR1VnZTF4dUlDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjYmlBZ2ZWeHVmVnh1UUhOMWNIQnZjblJ6SUNndGQyVmlhMmwwTFdGd2NHVmhjbUZ1WTJVNmJtOXVaU2w3WEc1aWIyUjVlMkpoWTJ0bmNtOTFibVE2ZFhKc0tGd2lMaTR2YVcxbkwyWm1NaTUzWldKd1hDSXBJRzV2TFhKbGNHVmhkQzlqYjNabGNuMWNibjFjYmx4dUlFQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQTNNREJ3ZUNsN1hHNWNia0J6ZFhCd2IzSjBjeUFvTFhkbFltdHBkQzFoY0hCbFlYSmhibU5sT201dmJtVXBlMXh1WEc1OVhHNWNibjFjYmlJc0lpNXVaWGR6ZTF4eVhHNGdJQ0FnYkdsemRDMXpkSGxzWlRwdWIyNWxPMXh5WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNRHRjY2x4dUlDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hISmNiaUFnSUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUhOd1lXTmxMV0psZEhkbFpXNDdYSEpjYmx4eVhHNGdJQ0FnUUdsdVkyeDFaR1VnY0doN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh5WEc0Z0lDQWdmVnh5WEc1OVhISmNibHh5WEc0aUxDSXVkR2wwYkdWN1hISmNiaUFnSUNCMFpYaDBMWFJ5WVc1elptOXliVG9nZFhCd1pYSmpZWE5sTzF4eVhHNWNjbHh1SUNBZ0lFQnBibU5zZFdSbElIQm9lMXh5WEc0Z0lDQWdJQ0FnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hISmNiaUFnSUNCOVhISmNibjFjY2x4dVhISmNiaUpkZlE9PSAqLyIsIioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5ib2R5IHtcbiAgZm9udC1zaXplOiAyMnB4O1xuICBmb250LWZhbWlseTogQXJpYWw7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uL2ltZy9mZjIucG5nXCIpIG5vLXJlcGVhdC9jb3Zlcjtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3MDBweCkge1xuICBib2R5IHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xuICB9XG59XG5cbi5uZXdzIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDcwMHB4KSB7XG4gIC5uZXdzIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuXG4udGl0bGUge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDcwMHB4KSB7XG4gIC50aXRsZSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcbmJvZHl7YmFja2dyb3VuZDp1cmwoXCIuLi9pbWcvZmYyLndlYnBcIikgbm8tcmVwZWF0L2NvdmVyfVxufVxuXG4gQG1lZGlhIChtYXgtd2lkdGg6IDcwMHB4KXtcblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSl7XG5cbn1cblxufVxuIiwiLm5ld3N7XHJcbiAgICBsaXN0LXN0eWxlOm5vbmU7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuXHJcbiAgICBAaW5jbHVkZSBwaHtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB9XHJcbn1cclxuXHJcbiIsIi50aXRsZXtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcblxyXG4gICAgQGluY2x1ZGUgcGh7XHJcbiAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIH1cclxufVxyXG5cclxuIl19 */